 
                                          Core Java
----------------------------------------------------------------------------------------------

OOPs :- Class Objcet,Abstraction,Encapsulation,Poly,Inheritance,Collection Framwork,Wrapper Class,Exception,MultiThreadig, FileHandeling, JD8 etc


Array  :-
---------------
It is Group of ELements for similar data type

a=[4,3,1,4,2,32]

Declarations :-
-----------------------------------------

 int a[] = new int[size];
 int []a = new int [size]

 new Employee(); // anomous Object 

 new int[]{4,2,5,6};  //anomous Array
  

Note :- it is can't declare but it is pass in funtion as Parameter

 [i]a  ===>> [0]a ==>> 0 * 4 + 6430 ==>> 6430
 a[i]===>>  a[0] ==>>  6430 + 0*4 ==>> 6430

How to find Array Length:-
---------------------------------------------------

  int a[]=new a[]{43,1,3,1,23,232};

1] useing length :-

    a.lenght // it is property of Array

2] useing size;
   
     a.size(); // it is method of Array

Types of Array :-
------------------------------------
1] One-Dimensional  -: a=[74,3,2,1]

2] Multi-Dimensional -: 2D,3D etc... 


What is Jaked Array -:
---------------------------------------
it is every row diffent column

Declartions :-
----------------------
int a[][]
int []a[]
int [][]a


OOP's
----------------------------------
1] Class :-
-----------------
- It is userdefine data type(diff type of data can be store)
- it is default value is  null
- it is not reall entity(memory)

2] Object :-
-------------------------------
It is reall entity(memory)
it is size it is depend on instance variable

Explaination of System.out.println :-
----------------------------------------------------------
System.out.println();
----------------------------------------
System is Class 
out is Static ref
println is Overloaded method for PrintStream class

class PrintStream{

    public int println(int x){
      newLine();
      return x;
  }
 public String  println(String x){
      newLine();
      return x;
  }
 public int  printf(int x){
      return x;
  }
public String  printf(String x){
      return x;
  }
}

class System{

 static  PrintStream out = new PrintStream(); // static ref
   
}
System.out.println(5); // 

Variables :
-------------------------------------
1] Static var / Class Var - common  memory.
 static var -->> static funct + non-static access possible
 
2] instnace var / Object Var :-
 
 instnace var -->> it is only access in non-static method

3] Loacal Var / function var
--------------------------------------------

Function Overideing :- // dyamic ploy /late binding 
--------------------------------------
package generics;

class Test{
	
	private void show() {
		System.out.println("I am Parnet");
	}
}

 class TestNew extends Test{
	 
	 public void show() {
		 System.out.println("I am Child");

	 }
 }
public class ArrayTest extends java.lang.Object {// fullyqulifiedClassName(class with packageName)

	
	public static void main(String[] args) {

		// TODO Auto-generated method stub
      
        Test t= new TestNew();
          t.show();

		 







 











